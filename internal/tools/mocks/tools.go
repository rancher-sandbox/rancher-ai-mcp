// Code generated by MockGen. DO NOT EDIT.
// Source: ../tools.go
//
// Generated by this command:
//
//	mockgen -source=../tools.go -destination=./tools.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
	dynamic "k8s.io/client-go/dynamic"
	kubernetes "k8s.io/client-go/kubernetes"
)

// MockK8sClient is a mock of K8sClient interface.
type MockK8sClient struct {
	ctrl     *gomock.Controller
	recorder *MockK8sClientMockRecorder
	isgomock struct{}
}

// MockK8sClientMockRecorder is the mock recorder for MockK8sClient.
type MockK8sClientMockRecorder struct {
	mock *MockK8sClient
}

// NewMockK8sClient creates a new mock instance.
func NewMockK8sClient(ctrl *gomock.Controller) *MockK8sClient {
	mock := &MockK8sClient{ctrl: ctrl}
	mock.recorder = &MockK8sClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockK8sClient) EXPECT() *MockK8sClientMockRecorder {
	return m.recorder
}

// CreateClientSet mocks base method.
func (m *MockK8sClient) CreateClientSet(token, url, cluster string) (kubernetes.Interface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateClientSet", token, url, cluster)
	ret0, _ := ret[0].(kubernetes.Interface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateClientSet indicates an expected call of CreateClientSet.
func (mr *MockK8sClientMockRecorder) CreateClientSet(token, url, cluster any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateClientSet", reflect.TypeOf((*MockK8sClient)(nil).CreateClientSet), token, url, cluster)
}

// GetResourceInterface mocks base method.
func (m *MockK8sClient) GetResourceInterface(token, url, namespace, cluster string, gvr schema.GroupVersionResource) (dynamic.ResourceInterface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourceInterface", token, url, namespace, cluster, gvr)
	ret0, _ := ret[0].(dynamic.ResourceInterface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourceInterface indicates an expected call of GetResourceInterface.
func (mr *MockK8sClientMockRecorder) GetResourceInterface(token, url, namespace, cluster, gvr any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceInterface", reflect.TypeOf((*MockK8sClient)(nil).GetResourceInterface), token, url, namespace, cluster, gvr)
}
